{"version":3,"sources":["app.js","config/cloudinaryConfig.js","config/compileConfig.js","config/constants.js","config/formlySections.js","config/localStorage.js","directives/bsHolder.js","directives/tcMovieWidget.js","directives/tcSocialShare.js","app.min.js","directives/tcTopicDetails.js","directives/tcTopicWidget.js","controllers/add.js","controllers/emailVerification.js","controllers/home.js","controllers/login.js","controllers/movies.js","controllers/myTopics.js","controllers/navbar.js","controllers/passwordReset.js","controllers/profile.js","controllers/signup.js","controllers/userTopic.js","filters/fromNow.js","services/cachedDataService.js","services/entries.js","services/helperService.js","services/searchService.js","services/topic.js","services/user.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider","html5Mode","state","url","templateUrl","controller","sp","authenticate","otherwise","hashPrefix","run","$stormpath","uiRouter","loginState","defaultPostLoginState","$","cloudinary","cloud_name","upload_preset","interceptors","push","request","withCredentials","$compileProvider","aHrefSanitizationWhitelist","encode","value","unencoded","encodeURIComponent","replace","decode","encoded","decodeURIComponent","constant","moment","formlyConfigProvider","unique","setType","name","$scope","copyFields","fields","copy","addRandomIds","addNew","model","options","key","repeatsection","lastSection","length","newsection","forEach","field","index","fieldGroup","templateOptions","id","getRandomInt","min","max","Math","floor","random","formOptions","formState","localStorageServiceProvider","setPrefix","setStorageType","directive","link","scope","element","attrs","Holder","tcMovieWidget","getTopEntriesString","entries","maxLength","result","_","each","item","text","topic","_highlightResult","title","image","mediaFiles","release","props","releaseDate","slug","genre","topEntries","restrict","tcSocialShare","HelperService","rrssbInit","$watch","newValue","oldValue","baseUrl","type","img","media","public_id","desc","append","$inject","tcTopicDetails","textField","textArea","category","hasOwnProperty","tcTopicWidget","userName","AddController","$rootScope","$alert","$state","$q","Upload","toastr","Topic","onSubmit","topicModel","JSON","parse","toJson","vm","files","uploadFile","then","resp","data","postUserTopic","respose","transitionTo","username","exists","error","err","init","label","placeholder","required","btnText","className","rows","cols","document","this","originalFields","setFiles","deferred","defer","upload","file","reject","$error","context","progress","e","round","loaded","total","status","headers","resolve","promise","dragOverClass","$event","items","dataTransfer","hasFile","i","kind","Auth","verify","displayName","email","password","pageClass","HomeController","SearchService","search","hits","topics","console","log","activate","format","LoginController","MoviesController","$user","$stateParams","Entries","User","submitEntry","entry","isEmpty","tc","submited","postMovieEntriesByTopicId","created","addEntryToLocalCache","userVoted","descSort","words","populateWordCloud","colors","getMovieBySlug","errorMessage","get","getUserEntriesByTopicId","pluck","content","list","text_all","text_less","limit","default","isMax","keySubmit","keyEvent","which","postTwoCentz","upVote","entryText","isVoted","indexOf","show","addClass","delay","fadeOut","toggleEntries","MyTopicsController","displayTopics","getAllUserTopics","NavBarController","$aside","asideMenu","template","showMenu","$promise","ProfileController","SignupController","UserTopicController","$modal","postUserTopicEntriesByTopicId","showModal","imgModal","getUserTopicBySlug","filter","date","fromNow","CachedDataService","$http","localStorageService","getValue","useCache","set","reason","postValue","postObject","post","deleteValue","remove","clearAll","cacheValue","urlParam","getUrlParam","service","factory","getMovieEntryById","topicId","wordCloud","weight","votes","sortBy","findIndex","getURLParameter","RegExp","exec","location","algolia","getIndex","ALGOLIA_CLIENT_ID","ALGOLIA_SEARCH_KEY","ALGOLIA_INDEX_NAME","client","Client","initIndex","getAll","getTopicBySlug","topicObj","merge","pick","description","getAllUserEntries"],"mappings":"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","file":"app.min.js","sourcesContent":["(function() {\r\n  'use strict';\r\n\r\n  angular.module('TwoCentzWeb', [\r\n    'algoliasearch',\r\n    'ngCookies',\r\n    'ngResource',\r\n    'ngMessages',\r\n    'ngAnimate',\r\n    'toastr',\r\n    'ui.router',\r\n    'ngSanitize',\r\n    'mgcrea.ngStrap',\r\n    'mgcrea.ngStrap.modal',\r\n    'mgcrea.ngStrap.aside',\r\n    'stormpath',\r\n    'stormpath.templates',\r\n    'angular-jqcloud',\r\n    'LocalStorageModule',\r\n    'formly',\r\n    'formlyBootstrap',\r\n    'ngFileUpload',\r\n    'cloudinary'\r\n    ])\r\n    .config(function ($stateProvider, $urlRouterProvider, $locationProvider, $httpProvider) {\r\n\r\n\r\n      $locationProvider.html5Mode(true);\r\n\r\n      $stateProvider\r\n        .state('home', {\r\n          url:'/',\r\n          templateUrl: 'html/home.html',\r\n          controller: 'HomeCtrl'\r\n        })\r\n        .state('movies', {\r\n          url:'/movies/:slug',\r\n          templateUrl: 'html/movies.html',\r\n          controller: 'MovieCtrl'\r\n        })\r\n        .state('usertopic', {\r\n          url: \"/user/:username/:slug\",\r\n          templateUrl: 'html/userTopic.html',\r\n          controller: 'UserTopicCtrl'\r\n        })\r\n        .state('login', {\r\n          url:'/login',\r\n          templateUrl: 'html/login.html',\r\n          controller: 'LoginCtrl'\r\n        })\r\n        .state('add', {\r\n          url:'/add',\r\n          templateUrl: 'html/add.html',\r\n          controller: 'AddCtrl',\r\n          sp: {\r\n            authenticate: true\r\n          }\r\n        })\r\n        .state('mytopics', {\r\n          url:'/mytopics',\r\n          templateUrl: 'html/mytopics.html',\r\n          controller: 'MyTopicsCtrl',\r\n          sp: {\r\n            authenticate: true\r\n          }\r\n        })\r\n        .state('signup', {\r\n          url:'/signup',\r\n          templateUrl: 'html/signup.html',\r\n          controller: 'SignupCtrl'\r\n        })\r\n        .state('profile', {\r\n          url: '/profile',\r\n          templateUrl: 'html/profile.html',\r\n          controller: 'ProfileCtrl',\r\n          sp: {\r\n            authenticate: true\r\n          }\r\n        })\r\n        .state('verify', {\r\n          url:'/emailVerification?sptoken',\r\n          templateUrl: 'html/emailVerification.html',\r\n          controller: 'VerifyCtrl'\r\n        })\r\n        .state('passwordResetRequest', {\r\n          url:'/password/requestReset?sptoken',\r\n          templateUrl: 'html/passwordResetRequest.html',\r\n          controller: 'ResetCtrl'\r\n        })\r\n        .state('reset', {\r\n          url:'/password/reset?sptoken',\r\n          templateUrl: 'html/passwordReset.html',\r\n          controller: 'ResetCtrl'\r\n        });\r\n\r\n        $urlRouterProvider.otherwise('/');\r\n        $locationProvider.html5Mode(true);\r\n        $locationProvider.hashPrefix('!');\r\n\r\n    })\r\n\r\n    .run(function($stormpath){\r\n      $stormpath.uiRouter({\r\n        loginState: 'login',\r\n        defaultPostLoginState: 'home'\r\n      });\r\n    });\r\n})();\r\n","(function() {\r\n  'use strict';\r\n  $.cloudinary.config().cloud_name = 'twocentz';\r\n  $.cloudinary.config().upload_preset = 'uwkaxglj';\r\n  angular\r\n      .module('TwoCentzWeb')\r\n      .config(function($httpProvider) {\r\n        $httpProvider.interceptors.push(function() {\r\n          return {\r\n            request: function(config) {\r\n              // overwrites stormpath interceptor which blocks CORS requests\r\n              config.withCredentials=false;\r\n              return config;\r\n            }\r\n          };\r\n        });\r\n      })\r\n})();\r\n","(function() {\r\n  'use strict';\r\n  angular\r\n    .module('TwoCentzWeb')\r\n    .config(function ($compileProvider) {\r\n       $compileProvider\r\n          .aHrefSanitizationWhitelist(/^\\s*(https?|ftp|mailto|whatsapp):/);\r\n    });\r\n})();\r\n","/**\r\n * Created by Ilyas on 11/8/2015.\r\n */\r\n(function() {\r\n  'use strict';\r\n  angular\r\n      .module('TwoCentzWeb')\r\n      .constant(\"moment\", moment)\r\n      .constant(\"encode\", encode)\r\n      .constant(\"decode\", decode);\r\n\r\n  function encode(value) {\r\n  \tvar unencoded = value;\r\n  \treturn encodeURIComponent(unencoded).replace(/'/g,\"%27\").replace(/\"/g,\"%22\");\r\n  }\r\n  function decode(value) {\r\n  \tvar encoded = value;\r\n  \treturn decodeURIComponent(encoded.replace(/\\+/g,  \" \"));\r\n  }\r\n\r\n})();\r\n","/**\r\n * Created by Ilyas on 10/27/2015.\r\n */\r\n'use strict';\r\nangular\r\n  .module('TwoCentzWeb')\r\n  .config(function config(formlyConfigProvider) {\r\n    var unique = 1;\r\n    formlyConfigProvider.setType({\r\n      name: 'propertySection',\r\n      templateUrl: 'html/propertySection.html',\r\n      /* @ngInject */\r\n      controller: function($scope) {\r\n        $scope.formOptions = {formState: $scope.formState};\r\n        $scope.addNew = addNew;\r\n\r\n        $scope.copyFields = copyFields;\r\n\r\n\r\n        function copyFields(fields) {\r\n          fields = angular.copy(fields);\r\n          addRandomIds(fields);\r\n          return fields;\r\n        }\r\n\r\n        function addNew() {\r\n          $scope.model[$scope.options.key] = $scope.model[$scope.options.key] || [];\r\n          var repeatsection = $scope.model[$scope.options.key];\r\n          var lastSection = repeatsection[repeatsection.length - 1];\r\n          var newsection = {};\r\n          if (lastSection) {\r\n            newsection = angular.copy(lastSection);\r\n          }\r\n          repeatsection.push(newsection);\r\n        }\r\n\r\n        function addRandomIds(fields) {\r\n          unique++;\r\n          angular.forEach(fields, function(field, index) {\r\n            if (field.fieldGroup) {\r\n              addRandomIds(field.fieldGroup);\r\n              return; // fieldGroups don't need an ID\r\n            }\r\n\r\n            if (field.templateOptions && field.templateOptions.fields) {\r\n              addRandomIds(field.templateOptions.fields);\r\n            }\r\n\r\n            field.id = field.id || (field.key + '_' + index + '_' + unique + getRandomInt(0, 9999));\r\n          });\r\n        }\r\n\r\n        function getRandomInt(min, max) {\r\n          return Math.floor(Math.random() * (max - min)) + min;\r\n        }\r\n      }\r\n    });\r\n});\r\n","(function() {\r\n  'use strict';\r\n  angular\r\n    .module('TwoCentzWeb')\r\n    .config(function (localStorageServiceProvider) {\r\n      localStorageServiceProvider\r\n          .setPrefix('TwoCentzWeb')\r\n          .setStorageType('sessionStorage')\r\n    });\r\n})();","(function() {\r\n  'use strict';\r\n  angular\r\n    .module('TwoCentzWeb')\r\n\t  .directive('bsHolder', function() {\r\n      return {\r\n\t      link: function (scope, element, attrs) {\r\n\t        Holder.run(element);\r\n\t      }\r\n\t    };\r\n\t  });\r\n})();","/**\r\n * Created by Ilyas on 10/25/2015.\r\n */\r\n(function () {\r\n  'use strict';\r\n\r\n  angular\r\n      .module('TwoCentzWeb')\r\n      .directive('tcMovieWidget', tcMovieWidget);\r\n\r\n  function tcMovieWidget() {\r\n    var directive = {\r\n      restrict: 'EA',\r\n      link: link,\r\n      scope: {\r\n        topic: '='\r\n      },\r\n      templateUrl: 'html/movieWidget.html'\r\n    };\r\n    return directive;\r\n\r\n    function link(scope, element, attrs) {\r\n      var topic = scope.topic;\r\n      if(scope.topic._highlightResult){\r\n        scope.title = topic._highlightResult.title.value;\r\n        scope.image = topic.mediaFiles[0].url;\r\n        scope.release = topic._highlightResult.props.releaseDate.value;\r\n        scope.slug = topic.slug;\r\n        scope.genre = topic._highlightResult.props.genre.value;\r\n        scope.entries = getTopEntriesString(topic.topEntries, 50);\r\n      } else {\r\n        scope.title = topic.title;\r\n        scope.image = topic.mediaFiles[0].url;\r\n        scope.release = topic.props.releaseDate;\r\n        scope.slug = topic.slug;\r\n        scope.genre = topic.props.genre;\r\n      }\r\n\r\n      function getTopEntriesString(entries, maxLength){\r\n        var result = \"\";\r\n        _.each(entries, function(item){\r\n          result += ' \"' + item.text + '\"';\r\n          if(result.length >= maxLength){\r\n             return false;\r\n          }\r\n        });\r\n        return result;\r\n      }\r\n    }\r\n  }\r\n\r\n})();\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('TwoCentzWeb')\r\n    .directive('tcSocialShare', tcSocialShare);\r\n\r\n  /* @ngInject */\r\n  function tcSocialShare(encode, HelperService) {\r\n    var directive = {\r\n      restrict: 'EA',\r\n      link: link,\r\n      scope: {\r\n        slug: '@',\r\n        media: '=',\r\n        entries: '=',\r\n        title: '@',\r\n        type: '@'\r\n      },\r\n      templateUrl: 'html/socialShare.html'\r\n    };\r\n    return directive;\r\n\r\n    function link(scope, element, attrs) {\r\n      // initializing social sharing buttons so they resize properly\r\n      rrssbInit();\r\n\r\n      scope.$watch('media', function(newValue, oldValue) {\r\n\r\n          var baseUrl = 'https://twocentz-ui-stage.herokuapp.com/';\r\n          if (newValue){\r\n            scope.url =  baseUrl + scope.type +'/' + scope.slug;\r\n            if(scope.type === 'user'){\r\n              scope.img = 'https://res.cloudinary.com/twocentz/image/upload/a_auto/' + scope.media[0].public_id;\r\n            } else {\r\n              scope.img = scope.media[0].url;\r\n            }\r\n            scope.title = encode(scope.title);\r\n            scope.desc = encode(HelperService.getTopEntriesString(scope.entries, 50));\r\n\r\n            //adding meta tags for prerendering\r\n            $('head').append('<meta property=\"og:title\" content=\"'+scope.title+'\" />');\r\n            $('head').append('<meta property=\"og:url\" content=\"'+scope.url+'\" />');\r\n            $('head').append('<meta property=\"og:image\" content=\"'+scope.img+'\" />');\r\n            $('head').append('<meta property=\"og:description\" content=\"'+scope.desc+'\" />');\r\n\r\n          }\r\n      });\r\n    }\r\n  }\r\n\r\n})();\r\n",null,"(function () {\r\n  'use strict';\r\n\r\n  angular\r\n      .module('TwoCentzWeb')\r\n      .directive('tcTopicDetails', tcTopicDetails);\r\n\r\n  function tcTopicDetails() {\r\n    var directive = {\r\n      restrict: 'EA',\r\n      link: link,\r\n      scope: {\r\n        props: '=',\r\n        category: '='\r\n      },\r\n      templateUrl: 'html/topicDetails.html'\r\n    };\r\n    return directive;\r\n\r\n    function link(scope, element, attrs) {\r\n\r\n      scope.textField = [];\r\n      scope.textArea = [];\r\n\r\n      scope.$watch('category', function(newValue, oldValue) {\r\n          if (newValue){\r\n            if(scope.category === 'USERS'){\r\n              if(scope.props.hasOwnProperty('textField')){\r\n                scope.textField = scope.props.textField;\r\n              }\r\n              if(scope.props.hasOwnProperty('textArea')){\r\n                scope.textArea = scope.props.textArea;\r\n              }\r\n            }\r\n          }\r\n      });\r\n    }\r\n  }\r\n\r\n})();\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n      .module('TwoCentzWeb')\r\n      .directive('tcTopicWidget', tcTopicWidget);\r\n\r\n  function tcTopicWidget() {\r\n    var directive = {\r\n      restrict: 'EA',\r\n      link: link,\r\n      scope: {\r\n        topic: '='\r\n      },\r\n      templateUrl: 'html/topicWidget.html'\r\n    };\r\n    return directive;\r\n\r\n    function link(scope, element, attrs) {\r\n      var topic = scope.topic;\r\n      scope.title = topic.title;\r\n      if(topic.mediaFiles && topic.mediaFiles.length >0){\r\n        scope.image = topic.mediaFiles[0].public_id;\r\n      } else {\r\n        scope.image = null;\r\n      }\r\n\r\n      scope.slug = topic.slug;\r\n      scope.userName = topic.userName;\r\n      scope.entries = getTopEntriesString(topic.topEntries, 50);\r\n\r\n    }\r\n\r\n    function getTopEntriesString(entries, maxLength){\r\n      var result = \"\";\r\n      _.each(entries, function(item){\r\n        result += ' \"' + item.text + '\"';\r\n        if(result.length >= maxLength){\r\n           return false;\r\n        }\r\n      });\r\n      return result;\r\n    }\r\n  }\r\n\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\tangular\r\n    .module('TwoCentzWeb')\r\n\t  .controller('AddCtrl', AddController);\r\n    /* @ngInject */\r\n    function AddController($scope, $rootScope, $alert, $state, $q, Upload, toastr, Topic) {\r\n      document.title = \"Add a new topic - TwoCentz\";\r\n      var vm = this;\r\n      // function assignment\r\n      vm.onSubmit = onSubmit;\r\n      vm.options = {};\r\n\r\n      init();\r\n\r\n      vm.originalFields = angular.copy(vm.fields);\r\n\r\n      //\r\n      function onSubmit() {\r\n        var topicModel = JSON.parse(angular.toJson(vm.model));\r\n        if ($scope.files) {\r\n          $scope.uploadFile()\r\n            .then(function(resp){\r\n              var  mediaFiles = [resp.data];\r\n              topicModel.mediaFiles = mediaFiles;\r\n              Topic.postUserTopic(topicModel)\r\n                .then(function(respose){\r\n                  if(respose.userName){\r\n                    $state.transitionTo('usertopic', { username: respose.userName, slug: respose.slug });\r\n                  } else if (respose.exists){\r\n                    toastr.error('title already exist, try another name.', 'Error');\r\n                  }\r\n                })\r\n            }, function(err){\r\n              toastr.error('uploading image file failed', 'Error');\r\n            })\r\n        }\r\n\r\n\r\n      }\r\n\r\n      //$scope.$watch('files', function() {\r\n      $scope.setFiles = function(files){\r\n        $scope.files = files;\r\n      }\r\n\r\n      //allowing only one file upload for now\r\n      $scope.uploadFile = function(){\r\n\r\n        var deferred = $q.defer();\r\n        var upload, file;\r\n        if (!$scope.files){\r\n          deferred.reject(\"error\");\r\n        }\r\n        file = $scope.files[0]\r\n        if (file && !file.$error) {\r\n          upload = Upload.upload({\r\n            url: \"https://api.cloudinary.com/v1_1/\" + $.cloudinary.config().cloud_name + \"/upload\",\r\n            fields: {\r\n              upload_preset: $.cloudinary.config().upload_preset,\r\n              context: 'alt=' + $scope.title\r\n            },\r\n            file: file\r\n          }).progress(function (e) {\r\n            file.progress = Math.round((e.loaded * 100.0) / e.total);\r\n            file.status = \"Uploading... \" + file.progress + \"%\";\r\n          }).error(function (data, status, headers, config) {\r\n            file.result = data;\r\n            deferred.reject(\"error\");\r\n          });\r\n        }\r\n\r\n        upload.then(function(resp) {\r\n          // file is uploaded successfully\r\n          deferred.resolve(resp);\r\n        });\r\n\r\n        return deferred.promise;\r\n\r\n        // if (!$scope.files) return;\r\n        // angular.forEach(files, function(file){\r\n        //   if (file && !file.$error) {\r\n        //     file.upload = Upload.upload({\r\n        //       url: \"https://api.cloudinary.com/v1_1/\" + $.cloudinary.config().cloud_name + \"/upload\",\r\n        //       fields: {\r\n        //         upload_preset: $.cloudinary.config().upload_preset,\r\n        //         context: 'alt=' + $scope.title\r\n        //       },\r\n        //       file: file\r\n        //     }).progress(function (e) {\r\n        //       file.progress = Math.round((e.loaded * 100.0) / e.total);\r\n        //       file.status = \"Uploading... \" + file.progress + \"%\";\r\n        //     }).success(function (data, status, headers, config) {\r\n        //       $rootScope.photos = $rootScope.photos || [];\r\n        //       data.context = {custom: {photo: $scope.title}};\r\n        //       file.result = data;\r\n        //       $rootScope.photos.push(data);\r\n        //     }).error(function (data, status, headers, config) {\r\n        //       file.result = data;\r\n        //     });\r\n        //   }\r\n        // });\r\n      };\r\n\r\n      /* Modify the look and fill of the dropzone when files are being dragged over it */\r\n      $scope.dragOverClass = function($event) {\r\n        var items = $event.dataTransfer.items;\r\n        var hasFile = false;\r\n        if (items != null) {\r\n          for (var i = 0 ; i < items.length; i++) {\r\n            if (items[i].kind == 'file') {\r\n              hasFile = true;\r\n              break;\r\n            }\r\n          }\r\n        } else {\r\n          hasFile = true;\r\n        }\r\n        return hasFile ? \"dragover\" : \"dragover-err\";\r\n      };\r\n\r\n\r\n      function init() {\r\n        vm.model = {};\r\n\r\n        // vm.model = {\r\n        //   //textField: [\r\n        //   //  {\r\n        //   //    fieldName:'',\r\n        //   //    fieldValue:''\r\n        //   //  }\r\n        //   //],\r\n        //   textArea: [\r\n        //     {\r\n        //       fieldName:'',\r\n        //       fieldValue:''\r\n        //     }\r\n        //   ]\r\n        // };\r\n\r\n\r\n        vm.fields = [\r\n          {\r\n            key: 'title',\r\n            type: 'input',\r\n            templateOptions: {\r\n              label: 'Title',\r\n              placeholder: 'your topics title',\r\n              required: true\r\n            }\r\n          },\r\n          {\r\n            key: 'description',\r\n            type: 'textarea',\r\n            templateOptions: {\r\n              label: 'Description',\r\n              placeholder: 'Some description of the topic'\r\n            }\r\n          },\r\n          //{\r\n          //  type: 'propertySection',\r\n          //  key: 'textField',\r\n          //  templateOptions: {\r\n          //    btnText:'new field',\r\n          //    fields: [\r\n          //      {\r\n          //        className: 'form-inline',\r\n          //        fieldGroup: [\r\n          //          {\r\n          //            type: 'input',\r\n          //            key: 'fieldName',\r\n          //            templateOptions: {\r\n          //              label: 'Label',\r\n          //              placeholder: 'your field label',\r\n          //              required: true\r\n          //            }\r\n          //          },\r\n          //          {\r\n          //            type: 'input',\r\n          //            key: 'fieldValue',\r\n          //            templateOptions: {\r\n          //              label: 'Value',\r\n          //              placeholder: 'your field value',\r\n          //              required: true\r\n          //            }\r\n          //          }\r\n          //        ]\r\n          //      }\r\n          //    ]\r\n          //  }\r\n          //},\r\n          {\r\n            type: 'propertySection',\r\n            key: 'textArea',\r\n            templateOptions: {\r\n              btnText:'new text area',\r\n              fields: [\r\n                {\r\n                  className: 'form-inline',\r\n                  fieldGroup: [\r\n                    {\r\n                      type: 'input',\r\n                      key: 'fieldName',\r\n                      templateOptions: {\r\n                        label: 'Label',\r\n                        placeholder: 'your field label',\r\n                        required: true\r\n                      }\r\n                    },\r\n                    {\r\n                      type: 'textarea',\r\n                      key: 'fieldValue',\r\n                      templateOptions: {\r\n                        label: 'Value',\r\n                        placeholder: 'your field value',\r\n                        required: true,\r\n                        rows: 4,\r\n                        cols: 20\r\n                      }\r\n                    }\r\n                  ]\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        ];\r\n      }\r\n\t  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n  angular.module('TwoCentzWeb')\r\n    .controller('VerifyCtrl', function($scope, Auth) {\r\n      document.title = \"Verify email - TwoCentz\";\r\n      $scope.verify = function() {\r\n        Auth.verify({\r\n          name: $scope.displayName,\r\n          email: $scope.email,\r\n          password: $scope.password\r\n        });\r\n      };\r\n      $scope.pageClass = 'fadeZoom'\r\n    });\r\n})();","(function() {\r\n  'use strict';\r\n  angular\r\n    .module('TwoCentzWeb')\r\n    .controller('HomeCtrl', HomeController);\r\n\r\n    /* @ngInject */\r\n    function HomeController($scope, moment, SearchService, Topic) {\r\n\r\n      document.title =  \"TwoCentz - topics, reviews, opinions\";\r\n\r\n      $scope.search = search;\r\n\r\n      function search(key) {\r\n        SearchService.search(key)\r\n          .then(function(hits){\r\n            $scope.topics = hits;\r\n          },function(err){\r\n            console.log(err);\r\n          })\r\n      };\r\n\r\n\r\n      function activate(){\r\n        search(moment().format('MMMM YYYY'));\r\n      };\r\n\r\n    //   function displayTopics(){\r\n    //    return Topic.getAll().then(function(data) {\r\n    //      $scope.topics = data.content;\r\n    //      return $scope.topics;\r\n    //    });\r\n    //  };\r\n     //\r\n    //  function activate(){\r\n    //    return displayTopics().then(function(){\r\n    //      //console.log(\"when rendering is finally called\");\r\n    //    });\r\n    //  };\r\n\r\n      activate();\r\n    }\r\n})();\r\n","(function() {\n  'use strict';\n  angular\n    .module('TwoCentzWeb')\n    .controller('LoginCtrl', LoginController);\n\n    /* @ngInject */\n    function LoginController($scope) {\n      document.title = \"User Login - TwoCentz\";\n    }\n})();","(function() {\r\n  'use strict';\r\n  angular\r\n    .module('TwoCentzWeb')\r\n    .controller('MovieCtrl', MoviesController);\r\n\r\n\r\n  /* @ngInject */\r\n  function MoviesController($scope, $user, $stateParams, $q, Topic, Entries, User, HelperService) {\r\n    $scope.error = false;\r\n    $scope.colors = [\"#ddd\", \"#ccc\", \"#bbb\", \"#aaa\", \"#999\", \"#888\", \"#777\", \"#666\", \"#555\", \"#444\", \"#333\", \"#222\"];\r\n    /**\r\n     * Get movie detail.\r\n     */\r\n    Topic.getMovieBySlug($stateParams.slug)\r\n      .then(function(data) {\r\n        if(data.error){\r\n          $scope.error = true;\r\n          $scope.errorMessage = \"Couldn't find information for movie '\" + $stateParams.slug +\"'\";\r\n        }else{\r\n\r\n          $scope.topic = data;\r\n          $scope.words = HelperService.populateWordCloud($scope.topic.topEntries);\r\n          $scope.userVoted = [];\r\n\r\n          document.title = $scope.topic.title + \" - TwoCentz\";\r\n\r\n          //check to see if user is logged in\r\n          $user.get()\r\n            .then(function(){\r\n\r\n              User.getUserEntriesByTopicId($scope.topic.id)\r\n                .then(function (data){\r\n                  if(data.error){\r\n                    toastr.error(\"Couldn't fetch user entries.\", 'Warning');\r\n                  } else {\r\n                    $scope.userVoted = _.pluck(data.content, 'text');\r\n                  }\r\n\r\n                });\r\n            })\r\n            .catch(function(){\r\n              //user not logged in\r\n            })\r\n\r\n        }\r\n      });\r\n\r\n    $scope.tc = {\r\n      text: \"\",\r\n      submited: false\r\n    };\r\n\r\n    // page properties.\r\n    $scope.list = {\r\n      text: \"show all\",\r\n      text_all: \"show all\",\r\n      text_less: \"show less\",\r\n      limit: 5,\r\n      default: 5,\r\n      max: 100,\r\n      isMax: false\r\n    };\r\n\r\n    $scope.keySubmit = function(keyEvent){\r\n      if (keyEvent.which === 13){\r\n         $scope.postTwoCentz();\r\n      }\r\n    };\r\n\r\n    $scope.upVote = function(entryText){\r\n      submitEntry(entryText);\r\n    };\r\n\r\n    $scope.isVoted = function(entryText) {\r\n      if(_.indexOf($scope.userVoted, entryText) > -1){\r\n        return true;\r\n      }else{\r\n        return false;\r\n      }\r\n    };\r\n\r\n    $scope.postTwoCentz = function(){\r\n      submitEntry($scope.tc.text)\r\n        .then(function(data){\r\n          if(data.created === 'true'){\r\n            $('.label-success').show().addClass('animated pulse').delay(2000).fadeOut(1000);\r\n          }else{\r\n            $('.label-danger').show().addClass('animated shake').delay(2000).fadeOut(1000);\r\n          }\r\n          $scope.tc.text = \"\";\r\n        })\r\n    };\r\n\r\n    $scope.toggleEntries = function(){\r\n\r\n      if(!$scope.isMax){\r\n        $scope.list.limit = $scope.list.max;\r\n        $scope.list.text = $scope.list.text_less;\r\n        $scope.isMax = true;\r\n      } else {\r\n        $scope.list.limit = $scope.list.default;\r\n        $scope.list.text = $scope.list.text_all;\r\n        $scope.isMax = false;\r\n      }\r\n      //angular.element(\".list-group\").addClass('animated pulse');\r\n    };\r\n\r\n    function submitEntry(entry){\r\n      var deferred = $q.defer();\r\n\r\n      if(!_.isEmpty(entry) && !$scope.tc.submited){\r\n        //disabling submit until process is completed\r\n        $scope.tc.submited = true;\r\n        Entries.postMovieEntriesByTopicId(entry, $scope.topic.id)\r\n          .then(function(data){\r\n            if(data.created === 'true'){\r\n              HelperService.addEntryToLocalCache(entry, $scope.topic.topEntries, $scope.userVoted);\r\n              $scope.topic.topEntries = HelperService.descSort($scope.topic.topEntries);\r\n              $scope.words = HelperService.populateWordCloud($scope.topic.topEntries);\r\n            }\r\n\r\n            deferred.resolve(data);\r\n            // reseting submit widget value\r\n            $scope.tc.submited = false;\r\n          });\r\n      }\r\n      return deferred.promise;\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n  angular\r\n    .module('TwoCentzWeb')\r\n    .controller('MyTopicsCtrl', MyTopicsController);\r\n\r\n    /* @ngInject */\r\n    function MyTopicsController($scope, Topic) {\r\n\r\n      document.title =  \"TwoCentz - My Topics\";\r\n\r\n      function displayTopics(){\r\n       return Topic.getAllUserTopics().then(function(data) {\r\n         $scope.topics = data.content;\r\n         return $scope.topics;\r\n       });\r\n     };\r\n\r\n     function activate(){\r\n       return displayTopics().then(function(){\r\n         //console.log(\"when rendering is finally called\");\r\n       });\r\n     };\r\n\r\n      activate();\r\n    }\r\n})();\r\n","(function() {\n  'use strict';\n  angular\n  .module('TwoCentzWeb')\n  .controller('NavbarCtrl', NavBarController);\n\n  /* @ngInject */\n  function NavBarController($scope, $aside) {\n    var asideMenu =  $aside({scope: $scope, template: 'html/asideNavbar.html', show: false});\n    $scope.showMenu = function(){\n      asideMenu.$promise.then(function() {\n        asideMenu.show();\n      })\n    };\n  }\n})();","(function() {\r\n  'use strict';\r\n  angular\r\n    .module('TwoCentzWeb')\r\n    .controller('ResetCtrl', function($scope) {\r\n        document.title = \"Reset password - TwoCentz\";\r\n\t  });\r\n})();","(function() {\r\n  'use strict';\r\n  angular\r\n    .module('TwoCentzWeb')\r\n    .controller('ProfileCtrl', ProfileController);\r\n  /* @ngInject */\r\n  function ProfileController($scope, $stateParams, Topic) {\r\n    document.title = \"User profile - TwoCentz\";\r\n\t}\r\n})();","(function() {\n  'use strict';\n  angular\n    .module('TwoCentzWeb')\n    .controller('SignupCtrl', SignupController);\n    /* @ngInject */\n    function SignupController($scope) {\n      document.title = \"Sign-up to TwoCentz\";\n\n    }\n})();","/**\r\n * Created by Ilyas on 11/8/2015.\r\n */\r\n(function() {\r\n  'use strict';\r\n  angular\r\n      .module('TwoCentzWeb')\r\n      .controller('UserTopicCtrl', UserTopicController);\r\n\r\n\r\n  /* @ngInject */\r\n  function UserTopicController($scope, $user, $stateParams, $q, $modal, Topic, Entries, toastr, User, HelperService) {\r\n    $scope.error = false;\r\n    $scope.colors = [\"#ddd\", \"#ccc\", \"#bbb\", \"#aaa\", \"#999\", \"#888\", \"#777\", \"#666\", \"#555\", \"#444\", \"#333\", \"#222\"];\r\n\r\n    \r\n    // Show when some event occurs (use $promise property to ensure the template has been loaded)\r\n    $scope.showModal = function() {\r\n      var imgModal = $modal({scope: $scope, template: 'html/topicImage.html', show: false});\r\n      imgModal.$promise.then(function(){\r\n        imgModal.show();\r\n      });\r\n    };\r\n\r\n    /**\r\n     * Get movie detail.\r\n     */\r\n    Topic.getUserTopicBySlug($stateParams.username, $stateParams.slug)\r\n        .then(function(data) {\r\n          if(data.error){\r\n            $scope.error = true;\r\n            $scope.errorMessage = \"Couldn't find information for topic '\" + $stateParams.slug +\"''\";\r\n\r\n          }else{\r\n            if(data.content.length === 0){\r\n              $scope.error = true;\r\n              $scope.errorMessage = \"Couldn't find information for topic '\" + $stateParams.slug +\"''\";\r\n            } else {\r\n              $scope.topic = data.content[0];\r\n              $scope.words = HelperService.populateWordCloud($scope.topic.topEntries);\r\n              $scope.userVoted = [];\r\n\r\n              document.title = $scope.topic.title + \" - TwoCentz\";\r\n\r\n              //check to see if user is logged in\r\n              $user.get()\r\n                 .then(function(){\r\n\r\n                   User.getUserEntriesByTopicId($scope.topic.id)\r\n                       .then(function (data){\r\n                         if(data.error){\r\n                           toastr.error(\"Couldn't fetch user entries.\", 'Warning');\r\n                         } else {\r\n                           $scope.userVoted = _.pluck(data.content, 'text');\r\n                         }\r\n\r\n                       });\r\n                 })\r\n                 .catch(function(){\r\n                   //user not logged in\r\n                 })\r\n            }\r\n          }\r\n        });\r\n\r\n    $scope.tc = {\r\n      text: \"\",\r\n      submited: false\r\n    };\r\n\r\n    // page properties.\r\n    $scope.list = {\r\n      text: \"show all\",\r\n      text_all: \"show all\",\r\n      text_less: \"show less\",\r\n      limit: 5,\r\n      default: 5,\r\n      max: 100,\r\n      isMax: false\r\n    };\r\n\r\n    $scope.keySubmit = function(keyEvent){\r\n      if (keyEvent.which === 13){\r\n        $scope.postTwoCentz();\r\n      }\r\n    };\r\n\r\n    $scope.upVote = function(entryText){\r\n      submitEntry(entryText);\r\n    };\r\n\r\n    $scope.isVoted = function(entryText) {\r\n      if(_.indexOf($scope.userVoted, entryText) > -1){\r\n        return true;\r\n      }else{\r\n        return false;\r\n      }\r\n    };\r\n\r\n    $scope.postTwoCentz = function(){\r\n      submitEntry($scope.tc.text)\r\n          .then(function(data){\r\n            if(data.created === 'true'){\r\n              $('.label-success').show().addClass('animated pulse').delay(2000).fadeOut(1000);\r\n            }else{\r\n              $('.label-danger').show().addClass('animated shake').delay(2000).fadeOut(1000);\r\n            }\r\n            $scope.tc.text = \"\";\r\n          })\r\n    };\r\n\r\n    $scope.toggleEntries = function(){\r\n\r\n      if(!$scope.isMax){\r\n        $scope.list.limit = $scope.list.max;\r\n        $scope.list.text = $scope.list.text_less;\r\n        $scope.isMax = true;\r\n      } else {\r\n        $scope.list.limit = $scope.list.default;\r\n        $scope.list.text = $scope.list.text_all;\r\n        $scope.isMax = false;\r\n      }\r\n      //angular.element(\".list-group\").addClass('animated pulse');\r\n    };\r\n\r\n    function submitEntry(entry){\r\n      var deferred = $q.defer();\r\n\r\n      if(!_.isEmpty(entry) && !$scope.tc.submited){\r\n        //disabling submit until process is completed\r\n        $scope.tc.submited = true;\r\n        Entries.postUserTopicEntriesByTopicId(entry, $scope.topic.id)\r\n            .then(function(data){\r\n              if(data.created === 'true'){\r\n                HelperService.addEntryToLocalCache(entry, $scope.topic.topEntries, $scope.userVoted);\r\n                $scope.topic.topEntries = HelperService.descSort($scope.topic.topEntries);\r\n                $scope.words = HelperService.populateWordCloud($scope.topic.topEntries);\r\n              }\r\n\r\n              deferred.resolve(data);\r\n              // reseting submit widget value\r\n              $scope.tc.submited = false;\r\n            });\r\n      }\r\n      return deferred.promise;\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\n  'use strict';\n  angular\n    .module('TwoCentzWeb')\n    .filter('fromNow', function() {\n      return function(date) {\n        return moment(date).fromNow();\n      }\n    });\n})();","(function() {\r\n  'use strict';\r\n  angular\r\n      .module('TwoCentzWeb')\r\n      .factory('CachedDataService', CachedDataService);\r\n\r\n  /* @ngInject */\r\n  function CachedDataService($http, $q, localStorageService, HelperService) {\r\n    var service = {\r\n      getValue : getValue,\r\n      postValue: postValue,\r\n      deleteValue: deleteValue,\r\n      clearAll: clearAll\r\n    }\r\n\r\n    return service;\r\n\r\n    ///////////////////\r\n\r\n    function getValue(key){\r\n      var deferred = $q.defer();\r\n      var value = localStorageService.get(key);\r\n\r\n\r\n      if(value && useCache()){\r\n        deferred.resolve(value);\r\n      } else {\r\n        $http.get(key)\r\n          .then(function(result) {\r\n            localStorageService.set(key, result.data);\r\n            deferred.resolve(result.data);\r\n          }, function(reason){\r\n            deferred.resolve(reason.data);\r\n          });\r\n      }\r\n      return deferred.promise;\r\n    }\r\n\r\n    function postValue(url, postObject){\r\n      var deferred = $q.defer();\r\n\r\n      $http.post(url, postObject)\r\n        .then(function(result) {\r\n          deferred.resolve(result.data);\r\n        }, function(reason){\r\n          deferred.resolve(reason.data);\r\n        });\r\n\r\n      return deferred.promise;\r\n    }\r\n\r\n    function deleteValue(key){\r\n      return localStorageService.remove(key);\r\n    }\r\n\r\n    function fetchFromCache(key){\r\n      return localStorageService.get(key);\r\n    }\r\n\r\n    function storeInCache(key, value){\r\n      localStorageService.set(key, value);\r\n    }\r\n\r\n    function clearAll(){\r\n      return localStorageService.clearAll();\r\n    }\r\n\r\n    function useCache(){\r\n      var cacheValue, urlParam, useCache = 'false'; //turning cache off for now\r\n\r\n      cacheValue = localStorageService.get('useCache');\r\n      urlParam =  HelperService.getUrlParam('useCache');\r\n\r\n      if(urlParam){\r\n        useCache = urlParam;\r\n      } else if (cacheValue){\r\n        useCache = cacheValue;\r\n      }\r\n\r\n      localStorageService.set('useCache', useCache);\r\n\r\n      if(useCache === 'true'){\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n})();\r\n","(function() {\r\n  'use strict';\r\n  angular\r\n    .module('TwoCentzWeb')\r\n    .factory('Entries', Entries);\r\n  /* @ngInject */\r\n  function Entries(CachedDataService) {\r\n    var service = {\r\n      getMovieEntryById : getMovieEntryById,\r\n      postMovieEntriesByTopicId: postMovieEntriesByTopicId,\r\n      postUserTopicEntriesByTopicId: postUserTopicEntriesByTopicId\r\n    };\r\n\r\n    return service;\r\n\r\n    function getMovieEntryById (id) {\r\n        CachedDataService.getValue('/api/movies/entries/' + id);\r\n    }\r\n\r\n    function postMovieEntriesByTopicId(text, topicId){\r\n      var postObject = {\r\n                      text: text,\r\n                      topicId: topicId\r\n                    };\r\n      return CachedDataService.postValue('api/entries/movies', postObject);\r\n    }\r\n\r\n    function postUserTopicEntriesByTopicId(text, topicId){\r\n      var postObject = {\r\n                      text: text,\r\n                      topicId: topicId\r\n                    };\r\n      return CachedDataService.postValue('api/entries/usertopics', postObject);\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n  angular\r\n    .module('TwoCentzWeb')\r\n    .factory('HelperService', HelperService);\r\n\r\n  /* @ngInject */\r\n  function HelperService() {\r\n    var service = {\r\n      descSort : descSort,\r\n      populateWordCloud: populateWordCloud,\r\n      addEntryToLocalCache: addEntryToLocalCache,\r\n      getUrlParam: getURLParameter,\r\n      getTopEntriesString: getTopEntriesString\r\n    }\r\n\r\n    return service;\r\n\r\n    ///////////////////\r\n    function populateWordCloud(entries){\r\n      var wordCloud = [];\r\n      _.each(entries, function(entry){\r\n        wordCloud.push({text: entry.text, weight: entry.votes});\r\n      });\r\n\r\n      return wordCloud;\r\n    }\r\n\r\n    function descSort(entries){\r\n      return _.sortBy(entries, function(entry) {\r\n        return entry.votes * -1; // desc sorting\r\n      });\r\n    }\r\n\r\n    function addEntryToLocalCache(text, entries, userVoted){\r\n      var index = _.findIndex(entries, function(entry) {\r\n        return entry.text == text;\r\n      });\r\n\r\n      if(index !== -1){\r\n\r\n        if(_.indexOf(userVoted, text) === -1){\r\n          entries[index].votes = entries[index].votes + 1;\r\n          userVoted.push(text);\r\n        }\r\n\r\n      } else {\r\n          entries.push({\"text\":text, votes: 1});\r\n          userVoted.push(text);\r\n      }\r\n\r\n    }\r\n\r\n    function getURLParameter(name) {\r\n      return decodeURIComponent((new RegExp('[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)').exec(location.search)||[,\"\"])[1].replace(/\\+/g, '%20'))||null\r\n    }\r\n\r\n    function getTopEntriesString(entries, maxLength){\r\n      var result = \"\";\r\n      _.each(entries, function(item){\r\n        result += ' \"' + item.text + '\"';\r\n        if(result.length >= maxLength){\r\n           return false;\r\n        }\r\n      });\r\n      return result;\r\n    }\r\n  }\r\n\r\n})();\r\n","/**\r\n * Created by Ilyas on 11/8/2015.\r\n */\r\n(function() {\r\n  'use strict';\r\n  angular\r\n      .module('TwoCentzWeb')\r\n      .factory('SearchService', SearchService);\r\n\r\n  /* @ngInject */\r\n  function SearchService($q, algolia) {\r\n    var service = {\r\n      search: search\r\n    }\r\n\r\n    return service;\r\n\r\n    ///////////////////\r\n\r\n    function search(key) {\r\n      var deferred = $q.defer();\r\n      getIndex().search(key)\r\n        .then(function searchSuccess(content) {\r\n            deferred.resolve(content.hits);\r\n        }, function searchFailure(err) {\r\n            deferred.reject(err);\r\n        });\r\n\r\n      return deferred.promise;\r\n    }\r\n\r\n    function getIndex(){\r\n      var ALGOLIA_CLIENT_ID = '05FTLLM54V';\r\n      var ALGOLIA_SEARCH_KEY = '657c40e74e8a05261076878c1d08d093';\r\n      var ALGOLIA_INDEX_NAME = 'twocentz_movies';\r\n\r\n\r\n      var client = algolia.Client(ALGOLIA_CLIENT_ID, ALGOLIA_SEARCH_KEY);\r\n      return client.initIndex(ALGOLIA_INDEX_NAME);\r\n    }\r\n\r\n  }\r\n})();\r\n","(function() {\r\n  'use strict';\r\n  angular\r\n    .module('TwoCentzWeb')\r\n    .factory('Topic', Topic);\r\n    /* @ngInject */\r\n    function Topic(CachedDataService) {\r\n      var service = {\r\n        getAll : getAll,\r\n        getTopicBySlug: getTopicBySlug,\r\n        getMovieBySlug: getMovieBySlug,\r\n        postUserTopic: postUserTopic,\r\n        getUserTopicBySlug: getUserTopicBySlug,\r\n        getAllUserTopics:  getAllUserTopics\r\n      }\r\n\r\n      return service;\r\n\r\n      ///////////////////\r\n      function getAll() {\r\n        return CachedDataService.getValue('/api/topics');\r\n      };\r\n\r\n      function getTopicBySlug(slug) {\r\n        return CachedDataService.getValue('/api/topics/s/' + slug);\r\n      };\r\n\r\n      function getMovieBySlug(slug) {\r\n        return CachedDataService.getValue('/api/movies/s/' + slug);\r\n      };\r\n\r\n      function getUserTopicBySlug(username, slug) {\r\n        return CachedDataService.getValue('api/topics/users/'+ username + '/' + slug);\r\n      };\r\n\r\n      function getAllUserTopics() {\r\n        return CachedDataService.getValue('api/usertopics');\r\n      };\r\n\r\n      function postUserTopic(topicObj){\r\n\r\n        var props = _.merge({}, _.pick(topicObj, 'textArea'),_.pick(topicObj, 'textField'));\r\n        var postObject = {\r\n          title: topicObj.title,\r\n          description: topicObj.description,\r\n          props: props,\r\n          mediaFiles: topicObj.mediaFiles\r\n        }\r\n\r\n        return CachedDataService.postValue('api/topics/users', postObject);\r\n      }\r\n  }\r\n\r\n})();\r\n","(function() {\r\n  'use strict';\r\n  angular\r\n    .module('TwoCentzWeb')\r\n    .factory('User', User);\r\n    /* @ngInject */\r\n    function User(CachedDataService) {\r\n      var service = {\r\n        getAllUserEntries : getAllUserEntries,\r\n        getUserEntriesByTopicId: getUserEntriesByTopicId\r\n      }\r\n\r\n      return service;\r\n\r\n      ///////////////////\r\n      function getAllUserEntries() {\r\n        return CachedDataService.getValue('/api/user/entries');\r\n      };\r\n\r\n      function getUserEntriesByTopicId(topicId) {\r\n        return CachedDataService.getValue('/api/user/entries/' + topicId);\r\n      };\r\n    }\r\n\r\n})();"],"sourceRoot":"/source/"}